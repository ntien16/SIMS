/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.sims.inventorymanager;


import com.formdev.flatlaf.ui.FlatTextFieldUI;
import com.sims.controller.InventoryController;
import com.sims.entitynew.Inventory;
import com.sims.jdbc.JDBCConnect;
import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics2D;
import static java.awt.image.ImageObserver.HEIGHT;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Sammy Guergachi <sguergachi at gmail.com>
 */
public class InventoryJPanel extends javax.swing.JPanel {
    private Inventory inventory;
      private List<Inventory> listinventory;
      private JDBCConnect jDBCConnect;
      private InventoryController inventoryController;
    
    /**
     * Creates new form ProductJPanel
     */
    public InventoryJPanel() throws SQLException, ClassNotFoundException {
        initComponents();
        jFind.setOpaque(true);
//        tableRender();
        
        inventory = new Inventory();
           listinventory = new ArrayList<>();
             jDBCConnect = new JDBCConnect();
              inventoryController = new InventoryController();
        listinventory = inventoryController.getAllInventory();
         showProduct();
        
    }
    public void comboBoxRender()
    {
        
    }
//    public void tableRender() {
//        table1.getTableHeader().setReorderingAllowed(false);
//        table1.getTableHeader().setDefaultRenderer(new DefaultTableCellRenderer());
//        table1.setOpaque(true);
//        table1.setBackground(Color.white);
//        table1.setBorder(new EmptyBorder(0, 0, 0, 0));
//        table1.setShowHorizontalLines(true);
//        table1.setRowHeight(40);
//        table1.setShowGrid(false);
//        table1.setShowHorizontalLines(false);
//        table1.setShowVerticalLines(false);
//
//        DefaultTableCellRenderer renderer = new DefaultTableCellRenderer() {
//            @Override
//            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
//                Component component = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
//                if (row % 2 == 0) {
//                    component.setBackground(Color.LIGHT_GRAY);
//                } else {
//                    component.setBackground(Color.WHITE);
//                }
//                return component;
//            }
//        };
//
//        for (int i = 0; i < table1.getColumnCount(); i++) {
//            table1.getColumnModel().getColumn(i).setCellRenderer(renderer);
//        }
//        JFrame frame = new JFrame("Remove Table Border Example");
//        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
//        JScrollPane scrollTable=new JScrollPane(); 
//        scrollTable.setBorder(null);
//        scrollTable.setViewport(null);
//        renderer.setHorizontalAlignment(HEIGHT);
//        table1.repaint();
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jFind = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        table1 = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jFind.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFindActionPerformed(evt);
            }
        });
        jFind.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jFindKeyReleased(evt);
            }
        });

        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NAME ", "CATEGORY", "UNIT", "QUANTITY", "SELL PRICE", "STATUS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1005, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFind, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jFind, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 6, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(25, 25, 25))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFindActionPerformed
     
    }//GEN-LAST:event_jFindActionPerformed

    private void jFindKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFindKeyReleased
       DefaultTableModel tableModel = (DefaultTableModel) table1.getModel();
       String filter=jFind.getText();
       String filter2= filter.toUpperCase();
      
        TableRowSorter<DefaultTableModel> tableSorter = new TableRowSorter<>(tableModel);
        table1.setRowSorter(tableSorter);
        tableSorter.setRowFilter(RowFilter.regexFilter( filter2));
        
    }//GEN-LAST:event_jFindKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jFind;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table1;
    // End of variables declaration//GEN-END:variables

    private void showProduct() {
        DefaultTableModel tableModel = (DefaultTableModel)table1.getModel();
        DecimalFormat decimalFormat = new DecimalFormat("#,##0.##");

        for (Inventory inventory : listinventory) {
            String formattedCostPrice = decimalFormat.format(inventory.getCostPrice());
            String formattedSellPrice = decimalFormat.format(inventory.getSellPrice());
            tableModel.addRow(new Object[]{
                inventory.getItemid(),
                inventory.getItemname(),
                inventory.getCategoryid().getCategoryname(),
                inventory.getUnitid().getUnitname(),
                inventory.getInventoryquantity(),
                formattedSellPrice,
                inventory.getStatusid().getStatusname()
            });
    }
    }
}

